import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateTable1758971539039 implements MigrationInterface {
    name = 'CreateTable1758971539039'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "deletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(50) NOT NULL, "account" character varying(20) NOT NULL, "gender" character varying(10), "password" character varying, "email" character varying(100), "mobile" character varying(20), "role" character varying(20), "state" character varying(20), "lastLoginAt" TIMESTAMP, "payload" json, CONSTRAINT "UQ_dd44b05034165835d6dcc18d684" UNIQUE ("account"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")); COMMENT ON COLUMN "users"."account" IS '账号'; COMMENT ON COLUMN "users"."gender" IS '性别'; COMMENT ON COLUMN "users"."password" IS '密码'; COMMENT ON COLUMN "users"."email" IS '邮箱'; COMMENT ON COLUMN "users"."mobile" IS '手机号'; COMMENT ON COLUMN "users"."role" IS '角色'; COMMENT ON COLUMN "users"."state" IS '状态'; COMMENT ON COLUMN "users"."payload" IS '其他字段'`);
        await queryRunner.query(`CREATE TABLE "recharges" ("id" SERIAL NOT NULL, "deletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "memberId" integer, "packageId" integer, "rechargeAmount" numeric(10,2), "bonusAmount" numeric(10,2) DEFAULT '0', "totalAmount" numeric(10,2), "totalTimes" integer DEFAULT '0', "usedTimes" integer DEFAULT '0', "remainingTimes" integer DEFAULT '0', "remainingAmount" numeric(10,2), "startDate" date, "endDate" date, "type" character varying(20), "packageName" character varying(100), "validityDays" integer, "paymentType" character varying, "seq" character varying(100), "state" character varying, "rechargeAt" TIMESTAMP, "operatorId" integer, "remark" text, "payload" json, CONSTRAINT "PK_19efa203cefcf8cf544d7ea7e33" PRIMARY KEY ("id")); COMMENT ON COLUMN "recharges"."memberId" IS '会员ID'; COMMENT ON COLUMN "recharges"."packageId" IS '套餐ID(可为空，纯余额充值)'; COMMENT ON COLUMN "recharges"."rechargeAmount" IS '充值金额'; COMMENT ON COLUMN "recharges"."bonusAmount" IS '赠送金额'; COMMENT ON COLUMN "recharges"."totalAmount" IS '总金额(充值+赠送)'; COMMENT ON COLUMN "recharges"."totalTimes" IS '总次数(套餐充值)'; COMMENT ON COLUMN "recharges"."usedTimes" IS '已使用次数'; COMMENT ON COLUMN "recharges"."remainingTimes" IS '剩余次数'; COMMENT ON COLUMN "recharges"."remainingAmount" IS '剩余金额'; COMMENT ON COLUMN "recharges"."startDate" IS '有效期开始时间'; COMMENT ON COLUMN "recharges"."endDate" IS '有效期结束时间'; COMMENT ON COLUMN "recharges"."type" IS '充值类型'; COMMENT ON COLUMN "recharges"."packageName" IS '套餐名称'; COMMENT ON COLUMN "recharges"."validityDays" IS '有效天数'; COMMENT ON COLUMN "recharges"."paymentType" IS '支付方式'; COMMENT ON COLUMN "recharges"."seq" IS '交易流水号'; COMMENT ON COLUMN "recharges"."state" IS '状态'; COMMENT ON COLUMN "recharges"."rechargeAt" IS '充值时间'; COMMENT ON COLUMN "recharges"."operatorId" IS '操作员ID'; COMMENT ON COLUMN "recharges"."remark" IS '备注'; COMMENT ON COLUMN "recharges"."payload" IS '其他字段'`);
        await queryRunner.query(`CREATE TYPE "public"."members_state_enum" AS ENUM('active', 'disabled')`);
        await queryRunner.query(`CREATE TABLE "members" ("id" SERIAL NOT NULL, "deletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(100), "phone" character varying(20), "email" character varying(100), "gender" character varying(10), "birthday" date, "level" character varying(10), "balance" numeric(10,2) DEFAULT '0', "points" integer DEFAULT '0', "state" "public"."members_state_enum" NOT NULL DEFAULT 'active', "avatar" json, "registerAt" TIMESTAMP, "remark" text, "payload" json, CONSTRAINT "UQ_090c60f7851c98387ce3e1995ef" UNIQUE ("phone"), CONSTRAINT "PK_28b53062261b996d9c99fa12404" PRIMARY KEY ("id")); COMMENT ON COLUMN "members"."name" IS '姓名'; COMMENT ON COLUMN "members"."phone" IS '电话'; COMMENT ON COLUMN "members"."email" IS '邮箱'; COMMENT ON COLUMN "members"."gender" IS '性别'; COMMENT ON COLUMN "members"."birthday" IS '生日'; COMMENT ON COLUMN "members"."level" IS '等级'; COMMENT ON COLUMN "members"."balance" IS '余额'; COMMENT ON COLUMN "members"."points" IS '积分'; COMMENT ON COLUMN "members"."state" IS '状态: active-活跃, disabled-禁用'; COMMENT ON COLUMN "members"."avatar" IS '头像'; COMMENT ON COLUMN "members"."registerAt" IS '会员登记时间'; COMMENT ON COLUMN "members"."remark" IS '备注'; COMMENT ON COLUMN "members"."payload" IS '其他字段'`);
        await queryRunner.query(`CREATE TABLE "consumptions" ("id" SERIAL NOT NULL, "deletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "memberId" integer, "rechargeId" integer, "customerName" character varying(100), "customerPhone" character varying(20), "packageId" integer, "amount" numeric(10,2) DEFAULT '0', "paymentType" character varying, "seq" character varying(80), "state" character varying(20), "consumptionAt" TIMESTAMP, "operatorId" integer, "remark" text, "payload" json, CONSTRAINT "PK_ec9f0a4b20167fd72dfac6ef201" PRIMARY KEY ("id")); COMMENT ON COLUMN "consumptions"."memberId" IS '会员ID(可为空，支持非会员消费)'; COMMENT ON COLUMN "consumptions"."rechargeId" IS '套餐重置记录'; COMMENT ON COLUMN "consumptions"."customerName" IS '客户姓名'; COMMENT ON COLUMN "consumptions"."customerPhone" IS '客户手机号'; COMMENT ON COLUMN "consumptions"."packageId" IS '套餐ID'; COMMENT ON COLUMN "consumptions"."amount" IS '消费金额'; COMMENT ON COLUMN "consumptions"."paymentType" IS '支付方式'; COMMENT ON COLUMN "consumptions"."seq" IS '交易流水号'; COMMENT ON COLUMN "consumptions"."state" IS '状态'; COMMENT ON COLUMN "consumptions"."consumptionAt" IS '消费时间'; COMMENT ON COLUMN "consumptions"."operatorId" IS '操作员ID'; COMMENT ON COLUMN "consumptions"."remark" IS '备注'; COMMENT ON COLUMN "consumptions"."payload" IS '其他字段'`);
        await queryRunner.query(`CREATE TABLE "packages" ("id" SERIAL NOT NULL, "deletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(200), "description" text, "packType" character varying, "category" character varying, "icon" character varying, "memberPrice" numeric(10,2) DEFAULT '0', "salePrice" numeric(10,2) DEFAULT '0', "price" numeric(10,2) DEFAULT '0', "totalTimes" integer DEFAULT '0', "validDay" integer DEFAULT '0', "state" character varying, "position" integer, "salesCount" integer DEFAULT '0', "payload" json, CONSTRAINT "PK_020801f620e21f943ead9311c98" PRIMARY KEY ("id")); COMMENT ON COLUMN "packages"."packType" IS '套餐类型'; COMMENT ON COLUMN "packages"."category" IS '分类'; COMMENT ON COLUMN "packages"."icon" IS '图标URL'; COMMENT ON COLUMN "packages"."totalTimes" IS '套餐使用次数'; COMMENT ON COLUMN "packages"."validDay" IS '有效天数'; COMMENT ON COLUMN "packages"."state" IS '状态'; COMMENT ON COLUMN "packages"."position" IS '排序'; COMMENT ON COLUMN "packages"."salesCount" IS '销售数量'; COMMENT ON COLUMN "packages"."payload" IS '其他字段'`);
        await queryRunner.query(`ALTER TABLE "recharges" ADD CONSTRAINT "FK_7dc2e8ea3e163722865706f646e" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "recharges" ADD CONSTRAINT "FK_db97a9b45abfe70ee71a7fef688" FOREIGN KEY ("packageId") REFERENCES "packages"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "recharges" ADD CONSTRAINT "FK_14212edb2f5eb0365212a9bd3e8" FOREIGN KEY ("operatorId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "consumptions" ADD CONSTRAINT "FK_06436769b4df1237549892ed2fd" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "consumptions" ADD CONSTRAINT "FK_92b41c5996d23639946651bc949" FOREIGN KEY ("packageId") REFERENCES "packages"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "consumptions" ADD CONSTRAINT "FK_6c18a98043f24388ed2818d8c97" FOREIGN KEY ("rechargeId") REFERENCES "recharges"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "consumptions" ADD CONSTRAINT "FK_8f3bd3db74dbc91ca004b162b9e" FOREIGN KEY ("operatorId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "consumptions" DROP CONSTRAINT "FK_8f3bd3db74dbc91ca004b162b9e"`);
        await queryRunner.query(`ALTER TABLE "consumptions" DROP CONSTRAINT "FK_6c18a98043f24388ed2818d8c97"`);
        await queryRunner.query(`ALTER TABLE "consumptions" DROP CONSTRAINT "FK_92b41c5996d23639946651bc949"`);
        await queryRunner.query(`ALTER TABLE "consumptions" DROP CONSTRAINT "FK_06436769b4df1237549892ed2fd"`);
        await queryRunner.query(`ALTER TABLE "recharges" DROP CONSTRAINT "FK_14212edb2f5eb0365212a9bd3e8"`);
        await queryRunner.query(`ALTER TABLE "recharges" DROP CONSTRAINT "FK_db97a9b45abfe70ee71a7fef688"`);
        await queryRunner.query(`ALTER TABLE "recharges" DROP CONSTRAINT "FK_7dc2e8ea3e163722865706f646e"`);
        await queryRunner.query(`DROP TABLE "packages"`);
        await queryRunner.query(`DROP TABLE "consumptions"`);
        await queryRunner.query(`DROP TABLE "members"`);
        await queryRunner.query(`DROP TYPE "public"."members_state_enum"`);
        await queryRunner.query(`DROP TABLE "recharges"`);
        await queryRunner.query(`DROP TABLE "users"`);
    }

}
